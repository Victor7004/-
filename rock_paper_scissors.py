d = {"камень": "ножницы", "ножницы": "бумага", "бумага": "камень"}
a, b = input(), input()
print("ничья" if a == b else ["Руслан", "Тимур"][b == d[a]])


# d - это словарь (тип данных, в котором хранятся пары ключ: значение).
#d [a] - работает так как в списке, но вместо индекса передается ключ и получается значение.
#Пары (ключ: значение) в словаре d подобраны так, что если ключ - ход Тимура, а значения - ход Руслана, то выигрывает Тимур. Поэтому конструкция b == d [a] возвращает True (правда) если выиграет Тимур и False (ложь), если выиграет Руслан (True, False - тип данных bool)
#Далее есть список [ "Руслан", "Тимур"] который сразу индексируется. И хотя индексом списка должно быть int, для Python это не проблема, для него True - это 1, а False - 0.
#А "ничья" if a == b else [ "Руслан", "Тимур"] [b == d [a]] - это сокращение от
#if a == b:
    #"Ничья"
#else:
    #[ "Руслан", "Тимур"] [b == d [a]]
  
   #Создается список и сразу получается элемент по индексу
#То же что и
#my_list = [ "Руслан", "Тимур"]
#index = (b == d [a])
#my_list [index]
